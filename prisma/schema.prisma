// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id            Int           @id @default(autoincrement())
  codeId        Int           @unique
  code          AccountCode   @relation(fields: [codeId], references: [id])
  name          String        @db.VarChar(255)
  balance       BigInt
  active        Boolean       @default(true)
  entries       Entry[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model AccountCode {
  id            Int           @id @default(autoincrement())
  code          Int
  supcodeId     Int?          
  supcode       AccountCode?  @relation("AccountSupcode", fields: [supcodeId], references: [id])  
  subcode       AccountCode[] @relation("AccountSupcode")
  category      String?       @db.VarChar(20)
  account       Account?
  
  @@unique([code, supcodeId])
}

model Ledger {
  id            Int           @id @default(autoincrement())
  description   String        @db.VarChar(255)
  entries       Entry[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Entry {
  id            Int           @id @default(autoincrement())
  ledgerId      Int
  ledger        Ledger        @relation(fields: [ledgerId], references: [id])
  account       Account       @relation(fields: [accountId], references: [id])
  accountId     Int
  amount        BigInt
  balance       BigInt
  direction     Int           @db.TinyInt
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
} 