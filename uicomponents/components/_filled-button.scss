@use "../component-tokens" as comp;

.button.filled {
    @each $key, $value in comp.$filled-button {
        --#{$key}: #{$value};
    }
    --shadow-rgb: var(--filled-button-container-shadow-color-rgb);
    --radius: calc(var(--filled-button-container-height) * 0.5);
    --color: var(--filled-button-label-color);

    & > .container {
        --background-color: var(--filled-button-container-color);

        & > .state-layer {
            --background-color: none;
        }
    }
    
    &:hover {
        @each $key, $value in comp.$filled-button-hover {
            --#{$key}: #{$value};
        }

        & > .container > .state-layer {
            --background-color: rgba(var(--filled-button-state-layer-color-rgb), var(--filled-button-state-layer-opacity));
        }
    }
    
    &:focus {
        @each $key, $value in comp.$filled-button-focus {
            --#{$key}: #{$value};
        }

        & > .container > .state-layer {
            --background-color: rgba(var(--filled-button-state-layer-color-rgb), var(--filled-button-state-layer-opacity));
        }
    }
    
    &:active {
        @each $key, $value in comp.$filled-button-pressed {
            --#{$key}: #{$value};
        }

        & > .container > .state-layer {
            --background-color: rgba(var(--filled-button-state-layer-color-rgb), var(--filled-button-state-layer-opacity));
        }
    }
    
    &:disabled {
        @each $key, $value in comp.$filled-button-disabled {
            --#{$key}: #{$value};
        }
        --color: rgba(var(--filled-button-label-color-rgb), var(--filled-button-label-opacity));

        & > .container {
            --background-color: rgba(var(--filled-button-container-color-rgb), var(--filled-button-container-opacity));

            & > .state-layer {
                --background-color: none;
            }
        }
    }

    background: none;
    border: none;
    outline: none;
    box-shadow: none;
    min-height: var(--reference-spacer2);
    min-width: var(--reference-spacer2);
    margin: 0;
    padding: 0;
    font-family: var(--filled-button-label-font);
    line-height: var(--filled-button-label-line-height);
    font-size: var(--filled-button-label-size);
    font-weight: var(--filled-button-label-weight);
    letter-spacing: var(--filled-button-label-tracking);
    color: var(--color);

    & > .container {
        position: relative;
        border-radius: var(--filled-button-container-shape);
        height: var(--filled-button-container-height);
        box-shadow: var(--filled-button-container-elevation);
        background-color: var(--background-color);
        overflow: hidden;

        & > .state-layer {
            display: grid;
            place-items: center;
            padding: {
                left: var(--reference-padding4);
                right: var(--reference-padding4);
            };
            height: 100%;
            background-color: var(--background-color);
            border-radius: var(--filled-button-container-shape);

            & > .label {
                padding: {
                    left: var(--reference-padding2);
                    right: var(--reference-padding2);
                }
            }
        }
    }
}