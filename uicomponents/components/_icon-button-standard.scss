@use "../component-tokens" as comp;

.icon-button.standard {
    @each $key, $value in comp.$icon-button-standard {
        --#{$key}: #{$value};
    }
    --container-width: var(--icon-button-standard-state-layer-width);
    --container-height: var(--icon-button-standard-state-layer-height);
    --container-shape: var(--icon-button-standard-state-layer-shape);
    --container-color: transparent;
    --outline-style: none;
    --outline-color: unset;
    --outline-width: unset;
    --outline-offset: unset;
    --state-layer-color: transparent;
    --state-layer-width: var(--icon-button-standard-state-layer-width);
    --state-layer-height: var(--icon-button-standard-state-layer-height);
    --state-layer-shape: var(--icon-button-standard-state-layer-shape);
    --icon-color: var(--icon-button-standard-unselected-icon-color);
    --icon-width: var(--icon-button-standard-icon-size);
    --icon-height: var(--icon-button-standard-icon-size);

    &.toggle.selected {
        --icon-color: var(--icon-button-standard-selected-icon-color);
    }

    &:hover {
        @each $key, $value in comp.$icon-button-standard-hover {
            --#{$key}: #{$value};
        }
        --state-layer-color: rgb(var(--icon-button-standard-unselected-state-layer-color-rgb), var(--icon-button-standard-unselected-state-layer-opacity));
    
        &.toggle-button.selected {
            --state-layer-color: rgb(var(--icon-button-standard-selected-state-layer-color-rgb), var(--icon-button-standard-selected-state-layer-opacity));
        }
    }

    &:focus {
        @each $key, $value in comp.$icon-button-standard-focus {
            --#{$key}: #{$value};
        }
        --state-layer-color: rgb(var(--icon-button-standard-unselected-state-layer-color-rgb), var(--icon-button-standard-unselected-state-layer-opacity));

        &.focus-indicator {
            --outline-style: solid;
            --outline-color: var(--icon-button-standard-indicator-color);
            --outline-width: var(--icon-button-standard-indicator-thickness);
            --outline-offset: var(--icon-button-standard-indicator-offset);
        }
    
        &.toggle.selected {
            --state-layer-color: rgb(var(--icon-button-standard-selected-state-layer-color-rgb), var(--icon-button-standard-selected-state-layer-opacity));
        }
    }

    &:active {
        @each $key, $value in comp.$icon-button-standard-pressed {
            --#{$key}: #{$value};
        }
        --state-layer-color: rgb(var(--icon-button-standard-unselected-state-layer-color-rgb), var(--icon-button-standard-unselected-state-layer-opacity));

        &.focus-indicator {
            --outline-style: none;
            --outline-color: unset;
            --outline-width: unset;
            --outline-offset: unset;
        }
    
        &.toggle.selected {
            --state-layer-color: rgb(var(--icon-button-standard-selected-state-layer-color-rgb), var(--icon-button-standard-selected-state-layer-opacity));
        }
    }

    &:disabled {
        @each $key, $value in comp.$icon-button-standard-disabled {
            --#{$key}: #{$value};
        }
        --state-layer-color: transparent;
        --icon-color: rgba(var(--icon-button-standard-icon-color-rgb), var(--icon-button-standard-icon-opacity));
    
        &.toggle.selected {
            --state-layer-color: transparent;
        }
    }
}